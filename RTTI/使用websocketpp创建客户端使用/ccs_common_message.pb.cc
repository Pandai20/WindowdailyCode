// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ccs_common_message.proto

#include "ccs_common_message.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace ccs_msg {
PROTOBUF_CONSTEXPR MsgHeader::MsgHeader(
    ::_pbi::ConstantInitialized)
  : header_id_(0){}
struct MsgHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgHeaderDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgHeaderDefaultTypeInternal() {}
  union {
    MsgHeader _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgHeaderDefaultTypeInternal _MsgHeader_default_instance_;
PROTOBUF_CONSTEXPR ResultInfo::ResultInfo(
    ::_pbi::ConstantInitialized)
  : error_description_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , result_(false)
  , error_code_(0)

  , header_id_(0){}
struct ResultInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResultInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResultInfoDefaultTypeInternal() {}
  union {
    ResultInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResultInfoDefaultTypeInternal _ResultInfo_default_instance_;
PROTOBUF_CONSTEXPR KeepAliveReq::KeepAliveReq(
    ::_pbi::ConstantInitialized){}
struct KeepAliveReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KeepAliveReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~KeepAliveReqDefaultTypeInternal() {}
  union {
    KeepAliveReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KeepAliveReqDefaultTypeInternal _KeepAliveReq_default_instance_;
PROTOBUF_CONSTEXPR KeepAliveRes::KeepAliveRes(
    ::_pbi::ConstantInitialized){}
struct KeepAliveResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KeepAliveResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~KeepAliveResDefaultTypeInternal() {}
  union {
    KeepAliveRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KeepAliveResDefaultTypeInternal _KeepAliveRes_default_instance_;
}  // namespace ccs_msg
static ::_pb::Metadata file_level_metadata_ccs_5fcommon_5fmessage_2eproto[4];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_ccs_5fcommon_5fmessage_2eproto[2];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_ccs_5fcommon_5fmessage_2eproto = nullptr;

const uint32_t TableStruct_ccs_5fcommon_5fmessage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ccs_msg::MsgHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ccs_msg::MsgHeader, header_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ccs_msg::ResultInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ccs_msg::ResultInfo, result_),
  PROTOBUF_FIELD_OFFSET(::ccs_msg::ResultInfo, error_code_),
  PROTOBUF_FIELD_OFFSET(::ccs_msg::ResultInfo, error_description_),
  PROTOBUF_FIELD_OFFSET(::ccs_msg::ResultInfo, header_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ccs_msg::KeepAliveReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ccs_msg::KeepAliveRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::ccs_msg::MsgHeader)},
  { 7, -1, -1, sizeof(::ccs_msg::ResultInfo)},
  { 17, -1, -1, sizeof(::ccs_msg::KeepAliveReq)},
  { 23, -1, -1, sizeof(::ccs_msg::KeepAliveRes)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::ccs_msg::_MsgHeader_default_instance_._instance,
  &::ccs_msg::_ResultInfo_default_instance_._instance,
  &::ccs_msg::_KeepAliveReq_default_instance_._instance,
  &::ccs_msg::_KeepAliveRes_default_instance_._instance,
};

const char descriptor_table_protodef_ccs_5fcommon_5fmessage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030ccs_common_message.proto\022\007ccs_msg\"\036\n\tM"
  "sgHeader\022\021\n\theader_id\030\001 \001(\005\"p\n\nResultInf"
  "o\022\016\n\006result\030\001 \001(\010\022$\n\nerror_code\030\002 \001(\0162\020."
  "ccs_msg.ErrCode\022\031\n\021error_description\030\003 \001"
  "(\t\022\021\n\theader_id\030\004 \001(\005\"\016\n\014KeepAliveReq\"\016\n"
  "\014KeepAliveRes*\272\n\n\007ErrCode\022\r\n\te_ErrNone\020\000"
  "\022\024\n\020e_ErrUnspecified\020\001\022\032\n\026e_ErrEndedByRe"
  "moteUser\020\002\022\033\n\027e_ErrEndedByCallerAbort\020\003\022"
  "\027\n\023e_ErrEndedByRefusal\020\004\022\030\n\024e_ErrEndedBy"
  "NoAnswer\020\005\022\035\n\031e_ErrEndedByTransportFail\020"
  "\006\022\"\n\036e_ErrEndedByCapabilityExchange\020\007\022\030\n"
  "\024e_ErrEndedByNoAccept\020\010\022\034\n\030e_ErrEndedByA"
  "nswerDenied\020\t\022\026\n\022e_ErrEndedByNoUser\020\n\022\033\n"
  "\027e_ErrEndedByNoBandwidth\020\013\022\033\n\027e_ErrEnded"
  "ByUnreachable\020\014\022\033\n\027e_ErrEndedByHostOffli"
  "ne\020\r\022\032\n\026e_ErrEndedByNoEndPoint\020\016\022\033\n\027e_Er"
  "rEndedByConnectFail\020\017\022\035\n\031e_ErrEndedByCal"
  "lCompleted\020\020\022\032\n\026e_ErrInvalidParameters\020\021"
  "\022\034\n\030e_ErrServerInternalError\020\022\022\035\n\031e_ErrA"
  "ccountAlreadyLoggeg\020\023\022\027\n\023e_ErrAccountExp"
  "ired\020\024\022\030\n\024e_ErrAccountNotExist\020\025\022\034\n\030e_Er"
  "rUnspecifiedPlatform\020\026\022$\n e_ErrIncorrect"
  "UsernameOrPassword\020\027\022\025\n\021e_ErrConfIsNotVC"
  "S\020\030\022\033\n\027e_ErrChairmanIsNotExsit\020\031\022\025\n\021e_Er"
  "rConfNotExsit\020\032\022\023\n\017e_ErrConfLocked\020\033\022\036\n\032"
  "e_ErrBeyondConfMaxMbrcount\020\034\022\035\n\031e_ErrBey"
  "ondMCUMaxMbrCount\020\035\022$\n e_ErrBeyondEnterp"
  "riseMaxMbrCount\020\036\022\"\n\036e_ErrBeyondPlatform"
  "MaxMbrCount\020\037\022\026\n\022e_ErrConfIsNotLive\020 \022\033\n"
  "\027e_ErrBeyondLiveMbrCount\020!\022\035\n\031e_ActiveRe"
  "fusedByChairman\020\"\022,\n(e_ErrBeyondEnterpri"
  "sePlatformMaxMbrCount\020#\022\033\n\027e_ErrBeyongSy"
  "stemLicens\020$\022 \n\034e_ErrMeetingIDNotMatchRo"
  "omID\020%\022\026\n\022e_BeyondConfsCount\020&\022\032\n\026e_Star"
  "tVideoEngineFail\020\'\022\021\n\re_NotEnoughMP\020(\022\022\n"
  "\016e_NotConnected\020)\022\032\n\026e_NotEnoughMCUResou"
  "rce\020*\022\037\n\033e_ErrIncorrectMPVideoParams\020+\022\030"
  "\n\024e_ErrNotFindDeviceId\020,\022\025\n\021e_ErrStartMo"
  "nitor\020-\022\031\n\025e_ErrSetMonitorLayout\020.*\356\001\n\022I"
  "TCVideoLayoutType\022\010\n\004e_1P\020\000\022\013\n\007e_1P_EX\020\001"
  "\022\010\n\004e_2P\020\002\022\010\n\004e_3P\020\003\022\010\n\004e_4P\020\004\022\n\n\006e_1_4P"
  "\020\005\022\n\n\006e_1_5P\020\006\022\n\n\006e_1_7P\020\007\022\014\n\010e_2_2_4P\020\010"
  "\022\010\n\004e_9P\020\t\022\t\n\005e_10P\020\n\022\013\n\007e_1_10P\020\013\022\013\n\007e_"
  "1_12P\020\014\022\t\n\005e_16P\020\r\022\013\n\007e_1_21P\020\016\022\t\n\005e_25P"
  "\020\017\022\t\n\005e_36P\020\020\022\t\n\005e_49P\020\021\022\t\n\005e_64P\020\022b\006pro"
  "to3"
  ;
static ::_pbi::once_flag descriptor_table_ccs_5fcommon_5fmessage_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ccs_5fcommon_5fmessage_2eproto = {
    false, false, 1803, descriptor_table_protodef_ccs_5fcommon_5fmessage_2eproto,
    "ccs_common_message.proto",
    &descriptor_table_ccs_5fcommon_5fmessage_2eproto_once, nullptr, 0, 4,
    schemas, file_default_instances, TableStruct_ccs_5fcommon_5fmessage_2eproto::offsets,
    file_level_metadata_ccs_5fcommon_5fmessage_2eproto, file_level_enum_descriptors_ccs_5fcommon_5fmessage_2eproto,
    file_level_service_descriptors_ccs_5fcommon_5fmessage_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ccs_5fcommon_5fmessage_2eproto_getter() {
  return &descriptor_table_ccs_5fcommon_5fmessage_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ccs_5fcommon_5fmessage_2eproto(&descriptor_table_ccs_5fcommon_5fmessage_2eproto);
namespace ccs_msg {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ErrCode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ccs_5fcommon_5fmessage_2eproto);
  return file_level_enum_descriptors_ccs_5fcommon_5fmessage_2eproto[0];
}
bool ErrCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ITCVideoLayoutType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ccs_5fcommon_5fmessage_2eproto);
  return file_level_enum_descriptors_ccs_5fcommon_5fmessage_2eproto[1];
}
bool ITCVideoLayoutType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class MsgHeader::_Internal {
 public:
};

MsgHeader::MsgHeader(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ccs_msg.MsgHeader)
}
MsgHeader::MsgHeader(const MsgHeader& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  header_id_ = from.header_id_;
  // @@protoc_insertion_point(copy_constructor:ccs_msg.MsgHeader)
}

inline void MsgHeader::SharedCtor() {
header_id_ = 0;
}

MsgHeader::~MsgHeader() {
  // @@protoc_insertion_point(destructor:ccs_msg.MsgHeader)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgHeader::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void MsgHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MsgHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:ccs_msg.MsgHeader)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  header_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgHeader::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 header_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          header_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MsgHeader::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ccs_msg.MsgHeader)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 header_id = 1;
  if (this->_internal_header_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_header_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ccs_msg.MsgHeader)
  return target;
}

size_t MsgHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ccs_msg.MsgHeader)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 header_id = 1;
  if (this->_internal_header_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_header_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgHeader::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MsgHeader::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgHeader::GetClassData() const { return &_class_data_; }

void MsgHeader::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MsgHeader *>(to)->MergeFrom(
      static_cast<const MsgHeader &>(from));
}


void MsgHeader::MergeFrom(const MsgHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccs_msg.MsgHeader)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_header_id() != 0) {
    _internal_set_header_id(from._internal_header_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgHeader::CopyFrom(const MsgHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccs_msg.MsgHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgHeader::IsInitialized() const {
  return true;
}

void MsgHeader::InternalSwap(MsgHeader* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(header_id_, other->header_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgHeader::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ccs_5fcommon_5fmessage_2eproto_getter, &descriptor_table_ccs_5fcommon_5fmessage_2eproto_once,
      file_level_metadata_ccs_5fcommon_5fmessage_2eproto[0]);
}

// ===================================================================

class ResultInfo::_Internal {
 public:
};

ResultInfo::ResultInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ccs_msg.ResultInfo)
}
ResultInfo::ResultInfo(const ResultInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  error_description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    error_description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_description().empty()) {
    error_description_.Set(from._internal_error_description(), 
      GetArenaForAllocation());
  }
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&header_id_) -
    reinterpret_cast<char*>(&result_)) + sizeof(header_id_));
  // @@protoc_insertion_point(copy_constructor:ccs_msg.ResultInfo)
}

inline void ResultInfo::SharedCtor() {
error_description_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  error_description_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&header_id_) -
    reinterpret_cast<char*>(&result_)) + sizeof(header_id_));
}

ResultInfo::~ResultInfo() {
  // @@protoc_insertion_point(destructor:ccs_msg.ResultInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResultInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  error_description_.Destroy();
}

void ResultInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResultInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ccs_msg.ResultInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_description_.ClearToEmpty();
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&header_id_) -
      reinterpret_cast<char*>(&result_)) + sizeof(header_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResultInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ccs_msg.ErrCode error_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_error_code(static_cast<::ccs_msg::ErrCode>(val));
        } else
          goto handle_unusual;
        continue;
      // string error_description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_error_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ccs_msg.ResultInfo.error_description"));
        } else
          goto handle_unusual;
        continue;
      // int32 header_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          header_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResultInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ccs_msg.ResultInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  // .ccs_msg.ErrCode error_code = 2;
  if (this->_internal_error_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_error_code(), target);
  }

  // string error_description = 3;
  if (!this->_internal_error_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_description().data(), static_cast<int>(this->_internal_error_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ccs_msg.ResultInfo.error_description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_error_description(), target);
  }

  // int32 header_id = 4;
  if (this->_internal_header_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_header_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ccs_msg.ResultInfo)
  return target;
}

size_t ResultInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ccs_msg.ResultInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_description = 3;
  if (!this->_internal_error_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_description());
  }

  // bool result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 + 1;
  }

  // .ccs_msg.ErrCode error_code = 2;
  if (this->_internal_error_code() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_error_code());
  }

  // int32 header_id = 4;
  if (this->_internal_header_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_header_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResultInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResultInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResultInfo::GetClassData() const { return &_class_data_; }

void ResultInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResultInfo *>(to)->MergeFrom(
      static_cast<const ResultInfo &>(from));
}


void ResultInfo::MergeFrom(const ResultInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccs_msg.ResultInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_description().empty()) {
    _internal_set_error_description(from._internal_error_description());
  }
  if (from._internal_result() != 0) {
    _internal_set_result(from._internal_result());
  }
  if (from._internal_error_code() != 0) {
    _internal_set_error_code(from._internal_error_code());
  }
  if (from._internal_header_id() != 0) {
    _internal_set_header_id(from._internal_header_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResultInfo::CopyFrom(const ResultInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccs_msg.ResultInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultInfo::IsInitialized() const {
  return true;
}

void ResultInfo::InternalSwap(ResultInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &error_description_, lhs_arena,
      &other->error_description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResultInfo, header_id_)
      + sizeof(ResultInfo::header_id_)
      - PROTOBUF_FIELD_OFFSET(ResultInfo, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResultInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ccs_5fcommon_5fmessage_2eproto_getter, &descriptor_table_ccs_5fcommon_5fmessage_2eproto_once,
      file_level_metadata_ccs_5fcommon_5fmessage_2eproto[1]);
}

// ===================================================================

class KeepAliveReq::_Internal {
 public:
};

KeepAliveReq::KeepAliveReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ccs_msg.KeepAliveReq)
}
KeepAliveReq::KeepAliveReq(const KeepAliveReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ccs_msg.KeepAliveReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KeepAliveReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KeepAliveReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata KeepAliveReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ccs_5fcommon_5fmessage_2eproto_getter, &descriptor_table_ccs_5fcommon_5fmessage_2eproto_once,
      file_level_metadata_ccs_5fcommon_5fmessage_2eproto[2]);
}

// ===================================================================

class KeepAliveRes::_Internal {
 public:
};

KeepAliveRes::KeepAliveRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ccs_msg.KeepAliveRes)
}
KeepAliveRes::KeepAliveRes(const KeepAliveRes& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ccs_msg.KeepAliveRes)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KeepAliveRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KeepAliveRes::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata KeepAliveRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ccs_5fcommon_5fmessage_2eproto_getter, &descriptor_table_ccs_5fcommon_5fmessage_2eproto_once,
      file_level_metadata_ccs_5fcommon_5fmessage_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace ccs_msg
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ccs_msg::MsgHeader*
Arena::CreateMaybeMessage< ::ccs_msg::MsgHeader >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ccs_msg::MsgHeader >(arena);
}
template<> PROTOBUF_NOINLINE ::ccs_msg::ResultInfo*
Arena::CreateMaybeMessage< ::ccs_msg::ResultInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ccs_msg::ResultInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ccs_msg::KeepAliveReq*
Arena::CreateMaybeMessage< ::ccs_msg::KeepAliveReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ccs_msg::KeepAliveReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ccs_msg::KeepAliveRes*
Arena::CreateMaybeMessage< ::ccs_msg::KeepAliveRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ccs_msg::KeepAliveRes >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
